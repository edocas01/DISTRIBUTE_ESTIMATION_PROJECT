Try unicycle

Distributed localization of the target:
	- relative measure between robot-target
	- distance measure between robot-target
	- distance measure between robot-target (some robots cannot measure the target)

Obstacles management:
	- single point o "shape"

Control:
	- compute the voronoi map 



DOMANDE:
- incertezza nella trilaterazione -> jacobiana va calcolata rispetto al target o alla poszione delle ancore


INCONTRO CON FONTANELLI 20/04/2023

	Localizzazione distribuita con solo misure di distanza è impossibile perchè il prolema non è osservabile.
	Quindi conviene fare come abbiamo fatto con misure relative.
	Il consenso si può fare solo se gli agenti scambiano la stessa informazione:
	nel caso in analisi ogni robot deve condividere con gli altri già una stima di posizione del target.
	

	GLi ostacoli conviene trattarli come misure di segmenti e conosciamo tipo gli angoli cose così 
	(sarebbe interessante provare ad avere misure di un LIDAR anche per le misure relative tra robots e target)

	Voronoi possiamo definire una gaussiana di peso che ha un massimo in un anello circolare per mantenere una certa distanza
	e poi volendo un' altra gaussiana per ogni robot per mantere la distanza con gli altri robot.
	Quindi avremo il centroide di voronoi e poi bisogna fare il controllo.
	Se il robot è lineare il controllo è banale, altrimenti con un uniciclo il controllo va fatto considerando di generare una 
	traiettoria oppure facendo un controllo di velocità.

	N.B. le celle di voronoi non sono convesse ma il robot rispetto alla sua posizione le vede convesse. Può raggiungere
	ogni posizione senza sbattere.




TODO:
far vedere performance di ogni setp:
	Localizzazione
	stima target
	controllo
	...
fare stessa simulazione con diverso numero di ROBOT
far vedere cosa "vede" ad esempio il robot 1 durante le simulazioni come sono le incertezze e cose così
fare unicicli  
fare laserscan
valutare piu forme
far vedere le performance (definire dei parametri)
far vedere voronoi
estrazione features di ostacoli (eventuali pareti ...)

SE aggiungo o tolgo robot cosa succede

alcuni robot più lenti di altri

far vedere i potenziali delle gaussiane


Ci si puo muovere fino a metà del raggio di comunicazione per essere sicuri di non sbattere con altri robot


Inoltre se un robot è dentro il mio raggio posso unire la mia informazione sulla sua posizione con la sua 
informazione sulla sua posizione se lui è in grado di darmela. Limitare anche la cella considerando l'ingombro del robotimage.png


Kp is at maximum equal to 1/dt:
- u = kp*(pi - ci) 
- dx = u * dt = kp*(pi - ci)*dt <= pi - ci => kp <= 1/dt


INCONTRO CON FONTANELLI 04/05/2023

il robot ha una velocità massima e di conseguenza so lo spostamento massimo del robot che puo avvenire
in un time step. Quindi o riduco la cella oppure aumento l'ingombro del robot
La legge di controllo delle slide funziona se è tempo continuo. se ho tempo discreto o riduco le celle o gonfio i robot.
Se limito kp allora posso stare dentro la cella (che deve comunque essere modificata con un certo ingombro).

la legge di controllo nel caso di un uniciclo deve garantirmi di stare nella cella quindi devo impostare una
omega massima e agire su v lineare di conseguenza.

Per considerare l'incertezza posso avvicinare i robot di un certo fattore di copertura.

Per garantire i requirements:

- limitare kp come detto sopra
- ridurre la cella del raggio del robot (svantaggio -> cella piccola, vantaggio -> semplice la gestione e non si necessita
  di ulteriori informazioni degli altri)
- aumentare il raggio di ingombro del robot di una quantità pari a vmax * dt (massimo spazio che può percorrere
  in un time step)